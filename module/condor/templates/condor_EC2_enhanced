# These settings become the default settings for all routes
JOB_ROUTER_DEFAULTS = $(JOB_ROUTER_DEFAULTS) \
  [ \
    MaxIdleJobs = 10; \
    MaxJobs = 200; \
\
    /* now modify routed job attributes */ \
    /* remove routed job if it goes on hold or stays idle for over 6 hours */ \
    set_PeriodicRemove = (JobStatus == 5 && \
                          HoldReason =!= "Spooling input data files") || \
                         (JobStatus == 1 && (CurrentTime - QDate) > 3600*6); \
    set_requirements = true; \
    set_WantAWS = false; \
  ]

# Now we define each of the routes to send jobs on
JOB_ROUTER_ENTRIES = $(JOB_ROUTER_ENTRIES) \
<% unless ec2e_route_small.nil? or ec2e_route_small == "" -%>
  [ GridResource = "condor localhost $(COLLECTOR_HOST)"; \
    Name = "Amazon Small"; \
    requirements=target.WantAWS is true && (target.Universe is vanilla || target.Universe is 5) && (target.WantArch is "INTEL" || target.WantArch is UNDEFINED) && (target.WantCpus <= 1 || target.WantCpus is UNDEFINED) && (target.WantMemory < 1.7 || target.WantMemory is UNDEFINED) && (target.WantDisk < 160 || target.WantDisk is UNDEFINED); \
    set_gridresource = "amazon"; \
<% unless ec2es_pub_key.nil? or ec2es_pub_key == "" -%>
    set_amazonpublickey = "<%= ec2es_pub_key %>"; \
<% end -%>
<% unless ec2es_priv_key.nil? or ec2es_priv_key == "" -%>
    set_amazonprivatekey = "<%= ec2es_priv_key %>"; \
<% end -%>
<% unless ec2es_access_key.nil? or ec2es_access_key == "" -%>
    set_amazonaccesskey = "<%= ec2es_access_key %>"; \
<% end -%>
<% unless ec2es_secret_key.nil? or ec2es_secret_key == "" -%>
    set_amazonsecretkey = "<%= ec2es_secret_key %>"; \
<% end -%>
<% unless ec2es_rsapub_key.nil? or ec2es_rsapub_key == "" -%>
    set_rsapublickey = "<%= ec2es_rsapub_key %>"; \
<% end -%>
    set_amazoninstancetype = "m1.small"; \
    set_amazons3bucketname = "<%= ec2es_bucket %>"; \
    set_amazonsqsqueuename = "<%= ec2es_queue %>"; \
    set_amazonamiid = "<%= ec2es_amiid %>"; \
    set_remote_jobuniverse = 5; \
  ] \
<% end -%>
<% unless ec2e_route_hcmedium.nil? or ec2e_route_hcmedium == "" -%>
  [ GridResource = "condor localhost $(COLLECTOR_HOST)"; \
    Name = "Amazon High-CPU Medium"; \
    requirements=target.WantAWS is true && (target.Universe is vanilla || target.Universe is 5) && (target.WantArch is "INTEL" || target.WantArch is UNDEFINED) && ((target.WantCpus > 1 && target.WantCpus <= 5) || (target.WantDisk > 160 && target.WantDisk <= 350)); \
    set_gridresource = "amazon"; \
<% unless ec2ehcm_pub_key.nil? or ec2ehcm_pub_key == "" -%>
    set_amazonpublickey = "<%= ec2ehcm_pub_key %>"; \
<% end -%>
<% unless ec2ehcm_priv_key.nil? or ec2ehcm_priv_key == "" -%>
    set_amazonprivatekey = "<%= ec2ehcm_priv_key %>"; \
<% end -%>
<% unless ec2ehcm_access_key.nil? or ec2ehcm_access_key == "" -%>
    set_amazonaccesskey = "<%= ec2ehcm_access_key %>"; \
<% end -%>
<% unless ec2ehcm_secret_key.nil? or ec2ehcm_secret_key == "" -%>
    set_amazonsecretkey = "<%= ec2ehcm_secret_key %>"; \
<% end -%>
<% unless ec2ehcm_rsapub_key.nil? or ec2ehcm_rsapub_key == "" -%>
    set_rsapublickey = "<%= ec2ehcm_rsapub_key %>"; \
<% end -%>
    set_amazoninstancetype = "c1.medium"; \
    set_amazons3bucketname = "<%= ec2ehcm_bucket %>"; \
    set_amazonsqsqueuename = "<%= ec2ehcm_queue %>"; \
    set_amazonamiid = "<%= ec2ehcm_amiid %>"; \
    set_remote_jobuniverse = 5; \
  ] \
<% end -%>
<% unless ec2e_route_hcelarge.nil? or ec2e_route_hcelarge == "" -%>
  [ GridResource = "condor localhost $(COLLECTOR_HOST)"; \
    Name = "Amazon High-CPU Extra Large"; \
    requirements=target.WantAWS is true && (target.Universe is vanilla || target.Universe is 5) && target.WantArch is "X86_64" && target.WantCpus > 8 && target.WantCpus <= 20 && (target.WantMemory <= 7 || target.WantMemory is UNDEFINED) && (target.WantDisk <= 1690 || target.WantDisk is UNDEFINED); \
    set_gridresource = "amazon"; \
<% unless ec2ehcel_pub_key.nil? or ec2ehcel_pub_key == "" -%>
    set_amazonpublickey = "<%= ec2ehcel_pub_key %>"; \
<% end -%>
<% unless ec2ehcel_priv_key.nil? or ec2ehcel_priv_key == "" -%>
    set_amazonprivatekey = "<%= ec2ehcel_priv_key %>"; \
<% end -%>
<% unless ec2ehcel_access_key.nil? or ec2ehcel_access_key == "" -%>
    set_amazonaccesskey = "<%= ec2ehcel_access_key %>"; \
<% end -%>
<% unless ec2ehcel_secret_key.nil? or ec2ehcel_secret_key == "" -%>
    set_amazonsecretkey = "<%= ec2ehcel_secret_key %>"; \
<% end -%>
<% unless ec2ehcel_rsapub_key.nil? or ec2ehcel_rsapub_key == "" -%>
    set_rsapublickey = "<%= ec2ehcel_rsapub_key %>"; \
<% end -%>
    set_amazoninstancetype = "c1.xlarge"; \
    set_amazons3bucketname = "<%= ec2ehcel_bucket %>"; \
    set_amazonsqsqueuename = "<%= ec2ehcel_queue %>"; \
    set_amazonamiid = "<%= ec2ehcel_amiid %>"; \
    set_remote_jobuniverse = 5; \
  ] \
<% end -%>
<% unless ec2e_route_xlarge.nil? or ec2e_route_xlarge == "" -%>
  [ GridResource = "condor localhost $(COLLECTOR_HOST)"; \
    Name = "Amazon XLarge"; \
    requirements=target.WantAWS is true && (target.Universe is vanilla || target.Universe is 5) && target.WantArch is "X86_64" && ((target.WantMemory > 7.5 && target.WantMemory <= 15) || (target.WantDisk > 850 && target.WantDisk < 1690) || (target.WantCpus > 4 && target.WantCpus <= 8)); \
    set_gridresource = "amazon"; \
<% unless ec2exlarge_pub_key.nil? or ec2exlarge_pub_key == "" -%>
    set_amazonpublickey = "<%= ec2exlarge_pub_key %>"; \
<% end -%>
<% unless ec2exlarge_priv_key.nil? or ec2exlarge_priv_key == "" -%>
    set_amazonprivatekey = "<%= ec2exlarge_priv_key %>"; \
<% end -%>
<% unless ec2exlarge_access_key.nil? or ec2exlarge_access_key == "" -%>
    set_amazonaccesskey = "<%= ec2exlarge_access_key %>"; \
<% end -%>
<% unless ec2exlarge_secret_key.nil? or ec2exlarge_secret_key == "" -%>
    set_amazonsecretkey = "<%= ec2exlarge_secret_key %>"; \
<% end -%>
<% unless ec2exlarge_rsapub_key.nil? or ec2exlarge_rsapub_key == "" -%>
    set_rsapublickey = "<%= ec2exlarge_rsapub_key %>"; \
<% end -%>
    set_amazoninstancetype = "m1.xlarge"; \
    set_amazons3bucketname = "<%= ec2exlarge_bucket %>"; \
    set_amazonsqsqueuename = "<%= ec2exlarge_queue %>"; \
    set_amazonamiid = "<%= ec2exlarge_amiid %>"; \
    set_remote_jobuniverse = 5; \
  ] \
<% end -%>
<% unless ec2e_route_large.nil? or ec2e_route_large == "" -%>
  [ GridResource = "condor localhost $(COLLECTOR_HOST)"; \
    Name = "Amazon Large"; \
    requirements=target.WantAWS is true && (target.Universe is vanilla || target.Universe is 5) && target.WantArch is "X86_64" && (target.WantCpus <= 4 || target.WantCpus is UNDEFINED) && (target.WantMemory <= 7.5 || target.WantMemory is UNDEFINED) && (target.WantDisk <= 850 || target.WantDisk is UNDEFINED); \
    set_gridresource = "amazon"; \
<% unless ec2elarge_pub_key.nil? or ec2elarge_pub_key == "" -%>
    set_amazonpublickey = "<%= ec2elarge_pub_key %>"; \
<% end -%>
<% unless ec2elarge_priv_key.nil? or ec2elarge_priv_key == "" -%>
    set_amazonprivatekey = "<%= ec2elarge_priv_key %>"; \
<% end -%>
<% unless ec2elarge_access_key.nil? or ec2elarge_access_key == "" -%>
    set_amazonaccesskey = "<%= ec2elarge_access_key %>"; \
<% end -%>
<% unless ec2elarge_secret_key.nil? or ec2elarge_secret_key == "" -%>
    set_amazonsecretkey = "<%= ec2elarge_secret_key %>"; \
<% end -%>
<% unless ec2elarge_rsapub_key.nil? or ec2elarge_rsapub_key == "" -%>
    set_rsapublickey = "<%= ec2elarge_rsapub_key %>"; \
<% end -%>
    set_amazoninstancetype = "m1.large"; \
    set_amazons3bucketname = "<%= ec2elarge_bucket %>"; \
    set_amazonsqsqueuename = "<%= ec2elarge_queue %>"; \
    set_amazonamiid = "<%= ec2elarge_amiid %>"; \
    set_remote_jobuniverse = 5; \
  ]
<% end -%>

# Job Router Hooks for EC2 translation
JOB_ROUTER_HOOK_TRANSLATE_JOB = $(LIBEXEC)/hooks/hook_translate.py
JOB_ROUTER_HOOK_UPDATE_JOB_INFO = $(LIBEXEC)/hooks/hook_retrieve_status.py
JOB_ROUTER_HOOK_JOB_EXIT = $(LIBEXEC)/hooks/hook_job_finalize.py
JOB_ROUTER_HOOK_JOB_CLEANUP = $(LIBEXEC)/hooks/hook_cleanup.py
